// Generated by Haxe 4.1.1

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace cs {
	public class Lib : global::haxe.lang.HxObject {
		
		public Lib(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public Lib() {
			#line 31 "/opt/haxe/std/cs/Lib.hx"
			global::cs.Lib.__hx_ctor_cs_Lib(this);
		}
		#line default
		
		protected static void __hx_ctor_cs_Lib(global::cs.Lib __hx_this) {
		}
		
		
		public static string decimalSeparator;
		
		public static void applyCultureChanges() {
			#line 39 "/opt/haxe/std/cs/Lib.hx"
			global::System.Globalization.CultureInfo ci = new global::System.Globalization.CultureInfo(((string) (global::System.Threading.Thread.CurrentThread.CurrentCulture.Name) ), ((bool) (true) ));
			global::cs.Lib.decimalSeparator = ci.NumberFormat.NumberDecimalSeparator;
			#line 41 "/opt/haxe/std/cs/Lib.hx"
			ci.NumberFormat.NumberDecimalSeparator = ((string) (".") );
			global::System.Threading.Thread.CurrentThread.CurrentCulture = ((global::System.Globalization.CultureInfo) (ci) );
		}
		#line default
		
		public static void revertDefaultCulture() {
			#line 49 "/opt/haxe/std/cs/Lib.hx"
			global::System.Globalization.CultureInfo ci = new global::System.Globalization.CultureInfo(((string) (global::System.Threading.Thread.CurrentThread.CurrentCulture.Name) ), ((bool) (true) ));
			global::System.Threading.Thread.CurrentThread.CurrentCulture = ((global::System.Globalization.CultureInfo) (ci) );
		}
		#line default
		
		public static void p_nativeArray<T>(global::Array<T> arr, global::System.Array ret) {
			#line 72 "/opt/haxe/std/cs/Lib.hx"
			T[] native = arr.__a;
			int len = arr.length;
			#line 74 "/opt/haxe/std/cs/Lib.hx"
			global::System.Array.Copy(((global::System.Array) (native) ), ((int) (0) ), ((global::System.Array) (ret) ), ((int) (0) ), ((int) (len) ));
		}
		#line default
		
		public static global::System.Type fromNativeType(global::System.Type t) {
			#line 96 "/opt/haxe/std/cs/Lib.hx"
			return t;
		}
		#line default
		
		public static global::System.Type toNativeType(global::System.Type cl) {
			#line 106 "/opt/haxe/std/cs/Lib.hx"
			return cl;
		}
		#line default
		
		public static global::System.Type toNativeEnum(global::System.Type cl) {
			#line 113 "/opt/haxe/std/cs/Lib.hx"
			return cl;
		}
		#line default
		
		public static global::System.Type nativeType(object obj) {
			#line 122 "/opt/haxe/std/cs/Lib.hx"
			return obj.GetType();
		}
		#line default
		
		public static global::System.Type getNativeType(object obj) {
			#line 129 "/opt/haxe/std/cs/Lib.hx"
			return obj.GetType();
		}
		#line default
		
		public static global::Array<T> array<T>(T[] native) {
			#line 152 "/opt/haxe/std/cs/Lib.hx"
			return new global::Array<T>(((T[]) (native) ));
		}
		#line default
		
		public static global::Array<T> arrayAlloc<T>(int size) {
			#line 160 "/opt/haxe/std/cs/Lib.hx"
			return new global::Array<T>(((T[]) (new T[size]) ));
		}
		#line default
		
	}
}


