// Generated by Haxe 4.1.1

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace haxe.xml {
	public class XmlParserException : global::haxe.lang.HxObject {
		
		public XmlParserException(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public XmlParserException(string message, string xml, int position) {
			#line 75 "/opt/haxe/std/haxe/xml/Parser.hx"
			global::haxe.xml.XmlParserException.__hx_ctor_haxe_xml_XmlParserException(this, message, xml, position);
		}
		#line default
		
		protected static void __hx_ctor_haxe_xml_XmlParserException(global::haxe.xml.XmlParserException __hx_this, string message, string xml, int position) {
			unchecked {
				#line 76 "/opt/haxe/std/haxe/xml/Parser.hx"
				__hx_this.xml = xml;
				__hx_this.message = message;
				#line 78 "/opt/haxe/std/haxe/xml/Parser.hx"
				__hx_this.position = position;
				__hx_this.lineNumber = 1;
				#line 80 "/opt/haxe/std/haxe/xml/Parser.hx"
				__hx_this.positionAtLine = 0;
				#line 82 "/opt/haxe/std/haxe/xml/Parser.hx"
				{
					#line 82 "/opt/haxe/std/haxe/xml/Parser.hx"
					int _g = 0;
					#line 82 "/opt/haxe/std/haxe/xml/Parser.hx"
					int _g1 = position;
					#line 82 "/opt/haxe/std/haxe/xml/Parser.hx"
					while (( _g < _g1 )) {
						#line 82 "/opt/haxe/std/haxe/xml/Parser.hx"
						int i = _g++;
						int c = ( (( ((uint) (i) ) < xml.Length )) ? (((int) (xml[i]) )) : (-1) );
						#line 84 "/opt/haxe/std/haxe/xml/Parser.hx"
						if (( c == 10 )) {
							#line 85 "/opt/haxe/std/haxe/xml/Parser.hx"
							__hx_this.lineNumber++;
							__hx_this.positionAtLine = 0;
						}
						else if (( c != 13 )) {
							#line 89 "/opt/haxe/std/haxe/xml/Parser.hx"
							__hx_this.positionAtLine++;
						}
						
					}
					
				}
				
			}
			#line default
		}
		
		
		public string message;
		
		public int lineNumber;
		
		public int positionAtLine;
		
		public int position;
		
		public string xml;
		
		public virtual string toString() {
			#line 95 "/opt/haxe/std/haxe/xml/Parser.hx"
			return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::Type.getClassName(global::Type.getClass<object>(((object) (this) ))), ": "), this.message), " at line "), global::haxe.lang.Runtime.toString(this.lineNumber)), " char "), global::haxe.lang.Runtime.toString(this.positionAtLine));
		}
		#line default
		
		public override double __hx_setField_f(string field, int hash, double @value, bool handleProperties) {
			unchecked {
				#line 49 "/opt/haxe/std/haxe/xml/Parser.hx"
				switch (hash) {
					case 1257939113:
					{
						#line 49 "/opt/haxe/std/haxe/xml/Parser.hx"
						this.position = ((int) (@value) );
						#line 49 "/opt/haxe/std/haxe/xml/Parser.hx"
						return @value;
					}
					
					
					case 446171152:
					{
						#line 49 "/opt/haxe/std/haxe/xml/Parser.hx"
						this.positionAtLine = ((int) (@value) );
						#line 49 "/opt/haxe/std/haxe/xml/Parser.hx"
						return @value;
					}
					
					
					case 1981972957:
					{
						#line 49 "/opt/haxe/std/haxe/xml/Parser.hx"
						this.lineNumber = ((int) (@value) );
						#line 49 "/opt/haxe/std/haxe/xml/Parser.hx"
						return @value;
					}
					
					
					default:
					{
						#line 49 "/opt/haxe/std/haxe/xml/Parser.hx"
						return base.__hx_setField_f(field, hash, @value, handleProperties);
					}
					
				}
				
			}
			#line default
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				#line 49 "/opt/haxe/std/haxe/xml/Parser.hx"
				switch (hash) {
					case 5991895:
					{
						#line 49 "/opt/haxe/std/haxe/xml/Parser.hx"
						this.xml = global::haxe.lang.Runtime.toString(@value);
						#line 49 "/opt/haxe/std/haxe/xml/Parser.hx"
						return @value;
					}
					
					
					case 1257939113:
					{
						#line 49 "/opt/haxe/std/haxe/xml/Parser.hx"
						this.position = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						#line 49 "/opt/haxe/std/haxe/xml/Parser.hx"
						return @value;
					}
					
					
					case 446171152:
					{
						#line 49 "/opt/haxe/std/haxe/xml/Parser.hx"
						this.positionAtLine = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						#line 49 "/opt/haxe/std/haxe/xml/Parser.hx"
						return @value;
					}
					
					
					case 1981972957:
					{
						#line 49 "/opt/haxe/std/haxe/xml/Parser.hx"
						this.lineNumber = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						#line 49 "/opt/haxe/std/haxe/xml/Parser.hx"
						return @value;
					}
					
					
					case 437335495:
					{
						#line 49 "/opt/haxe/std/haxe/xml/Parser.hx"
						this.message = global::haxe.lang.Runtime.toString(@value);
						#line 49 "/opt/haxe/std/haxe/xml/Parser.hx"
						return @value;
					}
					
					
					default:
					{
						#line 49 "/opt/haxe/std/haxe/xml/Parser.hx"
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
			#line default
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				#line 49 "/opt/haxe/std/haxe/xml/Parser.hx"
				switch (hash) {
					case 946786476:
					{
						#line 49 "/opt/haxe/std/haxe/xml/Parser.hx"
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "toString", 946786476)) );
					}
					
					
					case 5991895:
					{
						#line 49 "/opt/haxe/std/haxe/xml/Parser.hx"
						return this.xml;
					}
					
					
					case 1257939113:
					{
						#line 49 "/opt/haxe/std/haxe/xml/Parser.hx"
						return this.position;
					}
					
					
					case 446171152:
					{
						#line 49 "/opt/haxe/std/haxe/xml/Parser.hx"
						return this.positionAtLine;
					}
					
					
					case 1981972957:
					{
						#line 49 "/opt/haxe/std/haxe/xml/Parser.hx"
						return this.lineNumber;
					}
					
					
					case 437335495:
					{
						#line 49 "/opt/haxe/std/haxe/xml/Parser.hx"
						return this.message;
					}
					
					
					default:
					{
						#line 49 "/opt/haxe/std/haxe/xml/Parser.hx"
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
			#line default
		}
		
		
		public override double __hx_getField_f(string field, int hash, bool throwErrors, bool handleProperties) {
			unchecked {
				#line 49 "/opt/haxe/std/haxe/xml/Parser.hx"
				switch (hash) {
					case 1257939113:
					{
						#line 49 "/opt/haxe/std/haxe/xml/Parser.hx"
						return ((double) (this.position) );
					}
					
					
					case 446171152:
					{
						#line 49 "/opt/haxe/std/haxe/xml/Parser.hx"
						return ((double) (this.positionAtLine) );
					}
					
					
					case 1981972957:
					{
						#line 49 "/opt/haxe/std/haxe/xml/Parser.hx"
						return ((double) (this.lineNumber) );
					}
					
					
					default:
					{
						#line 49 "/opt/haxe/std/haxe/xml/Parser.hx"
						return base.__hx_getField_f(field, hash, throwErrors, handleProperties);
					}
					
				}
				
			}
			#line default
		}
		
		
		public override object __hx_invokeField(string field, int hash, object[] dynargs) {
			unchecked {
				#line 49 "/opt/haxe/std/haxe/xml/Parser.hx"
				switch (hash) {
					case 946786476:
					{
						#line 49 "/opt/haxe/std/haxe/xml/Parser.hx"
						return this.toString();
					}
					
					
					default:
					{
						#line 49 "/opt/haxe/std/haxe/xml/Parser.hx"
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
			}
			#line default
		}
		
		
		public override void __hx_getFields(global::Array<string> baseArr) {
			#line 49 "/opt/haxe/std/haxe/xml/Parser.hx"
			baseArr.push("xml");
			#line 49 "/opt/haxe/std/haxe/xml/Parser.hx"
			baseArr.push("position");
			#line 49 "/opt/haxe/std/haxe/xml/Parser.hx"
			baseArr.push("positionAtLine");
			#line 49 "/opt/haxe/std/haxe/xml/Parser.hx"
			baseArr.push("lineNumber");
			#line 49 "/opt/haxe/std/haxe/xml/Parser.hx"
			baseArr.push("message");
			#line 49 "/opt/haxe/std/haxe/xml/Parser.hx"
			base.__hx_getFields(baseArr);
		}
		#line default
		
		public override string ToString(){
			return this.toString();
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace haxe.xml {
	public class Parser : global::haxe.lang.HxObject {
		
		static Parser() {
			#line 100 "/opt/haxe/std/haxe/xml/Parser.hx"
			object __temp_stmt2 = null;
			#line 100 "/opt/haxe/std/haxe/xml/Parser.hx"
			{
				#line 101 "/opt/haxe/std/haxe/xml/Parser.hx"
				global::haxe.ds.StringMap<string> h = new global::haxe.ds.StringMap<string>();
				h.@set("lt", "<");
				#line 103 "/opt/haxe/std/haxe/xml/Parser.hx"
				h.@set("gt", ">");
				h.@set("amp", "&");
				#line 105 "/opt/haxe/std/haxe/xml/Parser.hx"
				h.@set("quot", "\"");
				h.@set("apos", "\'");
				#line 107 "/opt/haxe/std/haxe/xml/Parser.hx"
				__temp_stmt2 = h;
			}
			
			#line 100 "/opt/haxe/std/haxe/xml/Parser.hx"
			object __temp_stmt1 = global::haxe.ds.StringMap<object>.__hx_cast<string>(((global::haxe.ds.StringMap) (__temp_stmt2) ));
			#line 100 "/opt/haxe/std/haxe/xml/Parser.hx"
			global::haxe.xml.Parser.escapes = ((global::haxe.ds.StringMap<string>) (__temp_stmt1) );
		}
		#line default
		
		public Parser(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public Parser() {
			#line 99 "/opt/haxe/std/haxe/xml/Parser.hx"
			global::haxe.xml.Parser.__hx_ctor_haxe_xml_Parser(this);
		}
		#line default
		
		protected static void __hx_ctor_haxe_xml_Parser(global::haxe.xml.Parser __hx_this) {
		}
		
		
		public static global::haxe.ds.StringMap<string> escapes;
		
		public static global::Xml parse(string str, global::haxe.lang.Null<bool> strict) {
			#line 115 "/opt/haxe/std/haxe/xml/Parser.hx"
			bool strict1 = ( ( ! (strict.hasValue) ) ? (false) : ((strict).@value) );
			global::Xml doc = global::Xml.createDocument();
			#line 117 "/opt/haxe/std/haxe/xml/Parser.hx"
			global::haxe.xml.Parser.doParse(str, strict1, new global::haxe.lang.Null<int>(0, true), doc);
			return doc;
		}
		#line default
		
		public static int doParse(string str, bool strict, global::haxe.lang.Null<int> p, global::Xml parent) {
			unchecked {
				#line 121 "/opt/haxe/std/haxe/xml/Parser.hx"
				int p1 = ( ( ! (p.hasValue) ) ? (0) : ((p).@value) );
				global::Xml xml = null;
				#line 123 "/opt/haxe/std/haxe/xml/Parser.hx"
				int state = ((int) (1) );
				int next = ((int) (1) );
				#line 125 "/opt/haxe/std/haxe/xml/Parser.hx"
				string aname = null;
				int start = 0;
				#line 127 "/opt/haxe/std/haxe/xml/Parser.hx"
				int nsubs = 0;
				int nbrackets = 0;
				#line 129 "/opt/haxe/std/haxe/xml/Parser.hx"
				int c = ( (( ((uint) (p1) ) < str.Length )) ? (((int) (str[p1]) )) : (-1) );
				global::StringBuf buf = new global::StringBuf();
				#line 132 "/opt/haxe/std/haxe/xml/Parser.hx"
				int escapeNext = ((int) (1) );
				int attrValQuote = -1;
				#line 138 "/opt/haxe/std/haxe/xml/Parser.hx"
				while (( c != -1 )) {
					#line 139 "/opt/haxe/std/haxe/xml/Parser.hx"
					switch (state) {
						case 0:
						{
							#line 141 "/opt/haxe/std/haxe/xml/Parser.hx"
							switch (c) {
								case 9:
								case 10:
								case 13:
								case 32:
								{
									#line 142 "/opt/haxe/std/haxe/xml/Parser.hx"
									break;
								}
								
								
								default:
								{
									#line 144 "/opt/haxe/std/haxe/xml/Parser.hx"
									state = next;
									continue;
								}
								
							}
							
							#line 141 "/opt/haxe/std/haxe/xml/Parser.hx"
							break;
						}
						
						
						case 1:
						{
							#line 148 "/opt/haxe/std/haxe/xml/Parser.hx"
							if (( c == 60 )) {
								#line 150 "/opt/haxe/std/haxe/xml/Parser.hx"
								state = ((int) (0) );
								next = ((int) (2) );
							}
							else {
								#line 153 "/opt/haxe/std/haxe/xml/Parser.hx"
								start = p1;
								state = ((int) (13) );
								#line 155 "/opt/haxe/std/haxe/xml/Parser.hx"
								continue;
							}
							
							#line 148 "/opt/haxe/std/haxe/xml/Parser.hx"
							break;
						}
						
						
						case 2:
						{
							#line 179 "/opt/haxe/std/haxe/xml/Parser.hx"
							switch (c) {
								case 33:
								{
									#line 181 "/opt/haxe/std/haxe/xml/Parser.hx"
									int index = ( p1 + 1 );
									#line 181 "/opt/haxe/std/haxe/xml/Parser.hx"
									if (( (( (( ((uint) (index) ) < str.Length )) ? (((int) (str[index]) )) : (-1) )) == 91 )) {
										#line 182 "/opt/haxe/std/haxe/xml/Parser.hx"
										p1 += 2;
										if (( global::haxe.lang.StringExt.substr(str, p1, new global::haxe.lang.Null<int>(6, true)).ToUpperInvariant() != "CDATA[" )) {
											#line 184 "/opt/haxe/std/haxe/xml/Parser.hx"
											throw ((global::System.Exception) (global::haxe.Exception.thrown(new global::haxe.xml.XmlParserException("Expected <![CDATA[", str, p1))) );
										}
										
										#line 185 "/opt/haxe/std/haxe/xml/Parser.hx"
										p1 += 5;
										state = ((int) (17) );
										#line 187 "/opt/haxe/std/haxe/xml/Parser.hx"
										start = ( p1 + 1 );
									}
									else {
										#line 188 "/opt/haxe/std/haxe/xml/Parser.hx"
										bool tmp = default(bool);
										#line 188 "/opt/haxe/std/haxe/xml/Parser.hx"
										int index1 = ( p1 + 1 );
										#line 188 "/opt/haxe/std/haxe/xml/Parser.hx"
										if (( (( (( ((uint) (index1) ) < str.Length )) ? (((int) (str[index1]) )) : (-1) )) != 68 )) {
											#line 188 "/opt/haxe/std/haxe/xml/Parser.hx"
											int index2 = ( p1 + 1 );
											#line 188 "/opt/haxe/std/haxe/xml/Parser.hx"
											tmp = ( (( (( ((uint) (index2) ) < str.Length )) ? (((int) (str[index2]) )) : (-1) )) == 100 );
										}
										else {
											#line 188 "/opt/haxe/std/haxe/xml/Parser.hx"
											tmp = true;
										}
										
										#line 188 "/opt/haxe/std/haxe/xml/Parser.hx"
										if (tmp) {
											#line 189 "/opt/haxe/std/haxe/xml/Parser.hx"
											if (( global::haxe.lang.StringExt.substr(str, ( p1 + 2 ), new global::haxe.lang.Null<int>(6, true)).ToUpperInvariant() != "OCTYPE" )) {
												#line 190 "/opt/haxe/std/haxe/xml/Parser.hx"
												throw ((global::System.Exception) (global::haxe.Exception.thrown(new global::haxe.xml.XmlParserException("Expected <!DOCTYPE", str, p1))) );
											}
											
											#line 191 "/opt/haxe/std/haxe/xml/Parser.hx"
											p1 += 8;
											state = ((int) (16) );
											#line 193 "/opt/haxe/std/haxe/xml/Parser.hx"
											start = ( p1 + 1 );
										}
										else {
											#line 194 "/opt/haxe/std/haxe/xml/Parser.hx"
											bool tmp1 = default(bool);
											#line 194 "/opt/haxe/std/haxe/xml/Parser.hx"
											int index3 = ( p1 + 1 );
											#line 194 "/opt/haxe/std/haxe/xml/Parser.hx"
											if (( (( (( ((uint) (index3) ) < str.Length )) ? (((int) (str[index3]) )) : (-1) )) == 45 )) {
												#line 194 "/opt/haxe/std/haxe/xml/Parser.hx"
												int index4 = ( p1 + 2 );
												#line 194 "/opt/haxe/std/haxe/xml/Parser.hx"
												tmp1 = ( (( (( ((uint) (index4) ) < str.Length )) ? (((int) (str[index4]) )) : (-1) )) != 45 );
											}
											else {
												#line 194 "/opt/haxe/std/haxe/xml/Parser.hx"
												tmp1 = true;
											}
											
											#line 194 "/opt/haxe/std/haxe/xml/Parser.hx"
											if (tmp1) {
												#line 195 "/opt/haxe/std/haxe/xml/Parser.hx"
												throw ((global::System.Exception) (global::haxe.Exception.thrown(new global::haxe.xml.XmlParserException("Expected <!--", str, p1))) );
											}
											else {
												#line 197 "/opt/haxe/std/haxe/xml/Parser.hx"
												p1 += 2;
												state = ((int) (15) );
												#line 199 "/opt/haxe/std/haxe/xml/Parser.hx"
												start = ( p1 + 1 );
											}
											
										}
										
									}
									
									#line 181 "/opt/haxe/std/haxe/xml/Parser.hx"
									break;
								}
								
								
								case 47:
								{
									#line 205 "/opt/haxe/std/haxe/xml/Parser.hx"
									if (( parent == null )) {
										#line 206 "/opt/haxe/std/haxe/xml/Parser.hx"
										throw ((global::System.Exception) (global::haxe.Exception.thrown(new global::haxe.xml.XmlParserException("Expected node name", str, p1))) );
									}
									
									#line 207 "/opt/haxe/std/haxe/xml/Parser.hx"
									start = ( p1 + 1 );
									state = ((int) (0) );
									#line 209 "/opt/haxe/std/haxe/xml/Parser.hx"
									next = ((int) (10) );
									#line 204 "/opt/haxe/std/haxe/xml/Parser.hx"
									break;
								}
								
								
								case 63:
								{
									#line 202 "/opt/haxe/std/haxe/xml/Parser.hx"
									state = ((int) (14) );
									start = p1;
									#line 201 "/opt/haxe/std/haxe/xml/Parser.hx"
									break;
								}
								
								
								default:
								{
									#line 211 "/opt/haxe/std/haxe/xml/Parser.hx"
									state = ((int) (3) );
									start = p1;
									#line 213 "/opt/haxe/std/haxe/xml/Parser.hx"
									continue;
								}
								
							}
							
							#line 179 "/opt/haxe/std/haxe/xml/Parser.hx"
							break;
						}
						
						
						case 3:
						{
							#line 216 "/opt/haxe/std/haxe/xml/Parser.hx"
							if ( ! ((( ( ( ( ( ( ( ( c >= 97 ) && ( c <= 122 ) ) || ( ( c >= 65 ) && ( c <= 90 ) ) ) || ( ( c >= 48 ) && ( c <= 57 ) ) ) || ( c == 58 ) ) || ( c == 46 ) ) || ( c == 95 ) ) || ( c == 45 ) ))) ) {
								#line 217 "/opt/haxe/std/haxe/xml/Parser.hx"
								if (( p1 == start )) {
									#line 218 "/opt/haxe/std/haxe/xml/Parser.hx"
									throw ((global::System.Exception) (global::haxe.Exception.thrown(new global::haxe.xml.XmlParserException("Expected node name", str, p1))) );
								}
								
								#line 219 "/opt/haxe/std/haxe/xml/Parser.hx"
								xml = global::Xml.createElement(global::haxe.lang.StringExt.substr(str, start, new global::haxe.lang.Null<int>(( p1 - start ), true)));
								{
									#line 220 "/opt/haxe/std/haxe/xml/Parser.hx"
									parent.addChild(xml);
									#line 220 "/opt/haxe/std/haxe/xml/Parser.hx"
									 ++ nsubs;
								}
								
								#line 221 "/opt/haxe/std/haxe/xml/Parser.hx"
								state = ((int) (0) );
								next = ((int) (4) );
								#line 223 "/opt/haxe/std/haxe/xml/Parser.hx"
								continue;
							}
							
							#line 216 "/opt/haxe/std/haxe/xml/Parser.hx"
							break;
						}
						
						
						case 4:
						{
							#line 226 "/opt/haxe/std/haxe/xml/Parser.hx"
							switch (c) {
								case 47:
								{
									#line 228 "/opt/haxe/std/haxe/xml/Parser.hx"
									state = ((int) (11) );
									#line 228 "/opt/haxe/std/haxe/xml/Parser.hx"
									break;
								}
								
								
								case 62:
								{
									#line 230 "/opt/haxe/std/haxe/xml/Parser.hx"
									state = ((int) (9) );
									#line 230 "/opt/haxe/std/haxe/xml/Parser.hx"
									break;
								}
								
								
								default:
								{
									#line 232 "/opt/haxe/std/haxe/xml/Parser.hx"
									state = ((int) (5) );
									start = p1;
									#line 234 "/opt/haxe/std/haxe/xml/Parser.hx"
									continue;
								}
								
							}
							
							#line 226 "/opt/haxe/std/haxe/xml/Parser.hx"
							break;
						}
						
						
						case 5:
						{
							#line 237 "/opt/haxe/std/haxe/xml/Parser.hx"
							if ( ! ((( ( ( ( ( ( ( ( c >= 97 ) && ( c <= 122 ) ) || ( ( c >= 65 ) && ( c <= 90 ) ) ) || ( ( c >= 48 ) && ( c <= 57 ) ) ) || ( c == 58 ) ) || ( c == 46 ) ) || ( c == 95 ) ) || ( c == 45 ) ))) ) {
								#line 239 "/opt/haxe/std/haxe/xml/Parser.hx"
								if (( start == p1 )) {
									#line 240 "/opt/haxe/std/haxe/xml/Parser.hx"
									throw ((global::System.Exception) (global::haxe.Exception.thrown(new global::haxe.xml.XmlParserException("Expected attribute name", str, p1))) );
								}
								
								#line 238 "/opt/haxe/std/haxe/xml/Parser.hx"
								string tmp2 = global::haxe.lang.StringExt.substr(str, start, new global::haxe.lang.Null<int>(( p1 - start ), true));
								#line 242 "/opt/haxe/std/haxe/xml/Parser.hx"
								aname = tmp2;
								if (xml.exists(aname)) {
									#line 244 "/opt/haxe/std/haxe/xml/Parser.hx"
									throw ((global::System.Exception) (global::haxe.Exception.thrown(new global::haxe.xml.XmlParserException(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("Duplicate attribute [", aname), "]"), str, p1))) );
								}
								
								#line 245 "/opt/haxe/std/haxe/xml/Parser.hx"
								state = ((int) (0) );
								next = ((int) (6) );
								#line 247 "/opt/haxe/std/haxe/xml/Parser.hx"
								continue;
							}
							
							#line 237 "/opt/haxe/std/haxe/xml/Parser.hx"
							break;
						}
						
						
						case 6:
						{
							#line 250 "/opt/haxe/std/haxe/xml/Parser.hx"
							if (( c == 61 )) {
								#line 252 "/opt/haxe/std/haxe/xml/Parser.hx"
								state = ((int) (0) );
								next = ((int) (7) );
							}
							else {
								#line 255 "/opt/haxe/std/haxe/xml/Parser.hx"
								throw ((global::System.Exception) (global::haxe.Exception.thrown(new global::haxe.xml.XmlParserException("Expected =", str, p1))) );
							}
							
							#line 250 "/opt/haxe/std/haxe/xml/Parser.hx"
							break;
						}
						
						
						case 7:
						{
							#line 258 "/opt/haxe/std/haxe/xml/Parser.hx"
							switch (c) {
								case 34:
								case 39:
								{
									#line 260 "/opt/haxe/std/haxe/xml/Parser.hx"
									buf = new global::StringBuf();
									state = ((int) (8) );
									#line 262 "/opt/haxe/std/haxe/xml/Parser.hx"
									start = ( p1 + 1 );
									attrValQuote = c;
									#line 259 "/opt/haxe/std/haxe/xml/Parser.hx"
									break;
								}
								
								
								default:
								{
									#line 265 "/opt/haxe/std/haxe/xml/Parser.hx"
									throw ((global::System.Exception) (global::haxe.Exception.thrown(new global::haxe.xml.XmlParserException("Expected \"", str, p1))) );
								}
								
							}
							
							#line 258 "/opt/haxe/std/haxe/xml/Parser.hx"
							break;
						}
						
						
						case 8:
						{
							#line 268 "/opt/haxe/std/haxe/xml/Parser.hx"
							switch (c) {
								case 38:
								{
									#line 270 "/opt/haxe/std/haxe/xml/Parser.hx"
									{
										#line 270 "/opt/haxe/std/haxe/xml/Parser.hx"
										global::haxe.lang.Null<int> len = new global::haxe.lang.Null<int>(( p1 - start ), true);
										#line 270 "/opt/haxe/std/haxe/xml/Parser.hx"
										buf.b.Append(((string) (str) ), ((int) (start) ), ((int) (( ( ! (len.hasValue) ) ? (( str.Length - start )) : ((len).@value) )) ));
									}
									
									#line 271 "/opt/haxe/std/haxe/xml/Parser.hx"
									state = ((int) (18) );
									escapeNext = ((int) (8) );
									#line 273 "/opt/haxe/std/haxe/xml/Parser.hx"
									start = ( p1 + 1 );
									#line 269 "/opt/haxe/std/haxe/xml/Parser.hx"
									break;
								}
								
								
								case 60:
								case 62:
								{
									#line 274 "/opt/haxe/std/haxe/xml/Parser.hx"
									if (strict) {
										#line 276 "/opt/haxe/std/haxe/xml/Parser.hx"
										throw ((global::System.Exception) (global::haxe.Exception.thrown(new global::haxe.xml.XmlParserException(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("Invalid unescaped ", global::haxe.lang.StringExt.fromCharCode(c)), " in attribute value"), str, p1))) );
									}
									else if (( c == attrValQuote )) {
										#line 278 "/opt/haxe/std/haxe/xml/Parser.hx"
										{
											#line 278 "/opt/haxe/std/haxe/xml/Parser.hx"
											global::haxe.lang.Null<int> len1 = new global::haxe.lang.Null<int>(( p1 - start ), true);
											#line 278 "/opt/haxe/std/haxe/xml/Parser.hx"
											buf.b.Append(((string) (str) ), ((int) (start) ), ((int) (( ( ! (len1.hasValue) ) ? (( str.Length - start )) : ((len1).@value) )) ));
										}
										
										#line 279 "/opt/haxe/std/haxe/xml/Parser.hx"
										string val = buf.b.ToString();
										buf = new global::StringBuf();
										#line 281 "/opt/haxe/std/haxe/xml/Parser.hx"
										xml.@set(aname, val);
										state = ((int) (0) );
										#line 283 "/opt/haxe/std/haxe/xml/Parser.hx"
										next = ((int) (4) );
									}
									
									#line 274 "/opt/haxe/std/haxe/xml/Parser.hx"
									break;
								}
								
								
								default:
								{
									#line 277 "/opt/haxe/std/haxe/xml/Parser.hx"
									if (( c == attrValQuote )) {
										#line 278 "/opt/haxe/std/haxe/xml/Parser.hx"
										{
											#line 278 "/opt/haxe/std/haxe/xml/Parser.hx"
											global::haxe.lang.Null<int> len2 = new global::haxe.lang.Null<int>(( p1 - start ), true);
											#line 278 "/opt/haxe/std/haxe/xml/Parser.hx"
											buf.b.Append(((string) (str) ), ((int) (start) ), ((int) (( ( ! (len2.hasValue) ) ? (( str.Length - start )) : ((len2).@value) )) ));
										}
										
										#line 279 "/opt/haxe/std/haxe/xml/Parser.hx"
										string val1 = buf.b.ToString();
										buf = new global::StringBuf();
										#line 281 "/opt/haxe/std/haxe/xml/Parser.hx"
										xml.@set(aname, val1);
										state = ((int) (0) );
										#line 283 "/opt/haxe/std/haxe/xml/Parser.hx"
										next = ((int) (4) );
									}
									
									#line 277 "/opt/haxe/std/haxe/xml/Parser.hx"
									break;
								}
								
							}
							
							#line 268 "/opt/haxe/std/haxe/xml/Parser.hx"
							break;
						}
						
						
						case 9:
						{
							#line 286 "/opt/haxe/std/haxe/xml/Parser.hx"
							p1 = global::haxe.xml.Parser.doParse(str, strict, new global::haxe.lang.Null<int>(p1, true), xml);
							start = p1;
							#line 288 "/opt/haxe/std/haxe/xml/Parser.hx"
							state = ((int) (1) );
							#line 285 "/opt/haxe/std/haxe/xml/Parser.hx"
							break;
						}
						
						
						case 10:
						{
							#line 306 "/opt/haxe/std/haxe/xml/Parser.hx"
							if ( ! ((( ( ( ( ( ( ( ( c >= 97 ) && ( c <= 122 ) ) || ( ( c >= 65 ) && ( c <= 90 ) ) ) || ( ( c >= 48 ) && ( c <= 57 ) ) ) || ( c == 58 ) ) || ( c == 46 ) ) || ( c == 95 ) ) || ( c == 45 ) ))) ) {
								#line 307 "/opt/haxe/std/haxe/xml/Parser.hx"
								if (( start == p1 )) {
									#line 308 "/opt/haxe/std/haxe/xml/Parser.hx"
									throw ((global::System.Exception) (global::haxe.Exception.thrown(new global::haxe.xml.XmlParserException("Expected node name", str, p1))) );
								}
								
								#line 310 "/opt/haxe/std/haxe/xml/Parser.hx"
								string v = global::haxe.lang.StringExt.substr(str, start, new global::haxe.lang.Null<int>(( p1 - start ), true));
								if (( ( parent == null ) || ( parent.nodeType != ((int) (0) ) ) )) {
									#line 312 "/opt/haxe/std/haxe/xml/Parser.hx"
									throw ((global::System.Exception) (global::haxe.Exception.thrown(new global::haxe.xml.XmlParserException(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("Unexpected </", v), ">, tag is not open"), str, p1))) );
								}
								
								#line 314 "/opt/haxe/std/haxe/xml/Parser.hx"
								if (( parent.nodeType != global::Xml.Element )) {
									#line 314 "/opt/haxe/std/haxe/xml/Parser.hx"
									throw ((global::System.Exception) (global::haxe.Exception.thrown(global::haxe.lang.Runtime.concat("Bad node type, expected Element but found ", global::_Xml.XmlType_Impl_.toString(parent.nodeType)))) );
								}
								
								#line 314 "/opt/haxe/std/haxe/xml/Parser.hx"
								if (( v != parent.nodeName )) {
									#line 315 "/opt/haxe/std/haxe/xml/Parser.hx"
									if (( parent.nodeType != global::Xml.Element )) {
										#line 315 "/opt/haxe/std/haxe/xml/Parser.hx"
										throw ((global::System.Exception) (global::haxe.Exception.thrown(global::haxe.lang.Runtime.concat("Bad node type, expected Element but found ", global::_Xml.XmlType_Impl_.toString(parent.nodeType)))) );
									}
									
									#line 315 "/opt/haxe/std/haxe/xml/Parser.hx"
									throw ((global::System.Exception) (global::haxe.Exception.thrown(new global::haxe.xml.XmlParserException(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("Expected </", parent.nodeName), ">"), str, p1))) );
								}
								
								#line 317 "/opt/haxe/std/haxe/xml/Parser.hx"
								state = ((int) (0) );
								next = ((int) (12) );
								#line 319 "/opt/haxe/std/haxe/xml/Parser.hx"
								continue;
							}
							
							#line 306 "/opt/haxe/std/haxe/xml/Parser.hx"
							break;
						}
						
						
						case 11:
						{
							#line 290 "/opt/haxe/std/haxe/xml/Parser.hx"
							if (( c == 62 )) {
								#line 292 "/opt/haxe/std/haxe/xml/Parser.hx"
								state = ((int) (1) );
							}
							else {
								#line 294 "/opt/haxe/std/haxe/xml/Parser.hx"
								throw ((global::System.Exception) (global::haxe.Exception.thrown(new global::haxe.xml.XmlParserException("Expected >", str, p1))) );
							}
							
							#line 290 "/opt/haxe/std/haxe/xml/Parser.hx"
							break;
						}
						
						
						case 12:
						{
							#line 297 "/opt/haxe/std/haxe/xml/Parser.hx"
							if (( c == 62 )) {
								#line 299 "/opt/haxe/std/haxe/xml/Parser.hx"
								if (( nsubs == 0 )) {
									#line 300 "/opt/haxe/std/haxe/xml/Parser.hx"
									parent.addChild(global::Xml.createPCData(""));
								}
								
								#line 301 "/opt/haxe/std/haxe/xml/Parser.hx"
								return p1;
							}
							else {
								#line 303 "/opt/haxe/std/haxe/xml/Parser.hx"
								throw ((global::System.Exception) (global::haxe.Exception.thrown(new global::haxe.xml.XmlParserException("Expected >", str, p1))) );
							}
							
						}
						
						
						case 13:
						{
							#line 158 "/opt/haxe/std/haxe/xml/Parser.hx"
							if (( c == 60 )) {
								#line 159 "/opt/haxe/std/haxe/xml/Parser.hx"
								{
									#line 159 "/opt/haxe/std/haxe/xml/Parser.hx"
									global::haxe.lang.Null<int> len3 = new global::haxe.lang.Null<int>(( p1 - start ), true);
									#line 159 "/opt/haxe/std/haxe/xml/Parser.hx"
									buf.b.Append(((string) (str) ), ((int) (start) ), ((int) (( ( ! (len3.hasValue) ) ? (( str.Length - start )) : ((len3).@value) )) ));
								}
								
								#line 160 "/opt/haxe/std/haxe/xml/Parser.hx"
								global::Xml child = global::Xml.createPCData(buf.b.ToString());
								buf = new global::StringBuf();
								#line 162 "/opt/haxe/std/haxe/xml/Parser.hx"
								{
									#line 162 "/opt/haxe/std/haxe/xml/Parser.hx"
									parent.addChild(child);
									#line 162 "/opt/haxe/std/haxe/xml/Parser.hx"
									 ++ nsubs;
								}
								
								#line 163 "/opt/haxe/std/haxe/xml/Parser.hx"
								state = ((int) (0) );
								next = ((int) (2) );
							}
							else if (( c == 38 )) {
								#line 166 "/opt/haxe/std/haxe/xml/Parser.hx"
								{
									#line 166 "/opt/haxe/std/haxe/xml/Parser.hx"
									global::haxe.lang.Null<int> len4 = new global::haxe.lang.Null<int>(( p1 - start ), true);
									#line 166 "/opt/haxe/std/haxe/xml/Parser.hx"
									buf.b.Append(((string) (str) ), ((int) (start) ), ((int) (( ( ! (len4.hasValue) ) ? (( str.Length - start )) : ((len4).@value) )) ));
								}
								
								#line 167 "/opt/haxe/std/haxe/xml/Parser.hx"
								state = ((int) (18) );
								escapeNext = ((int) (13) );
								#line 169 "/opt/haxe/std/haxe/xml/Parser.hx"
								start = ( p1 + 1 );
							}
							
							#line 158 "/opt/haxe/std/haxe/xml/Parser.hx"
							break;
						}
						
						
						case 14:
						{
							#line 337 "/opt/haxe/std/haxe/xml/Parser.hx"
							bool tmp3 = default(bool);
							#line 337 "/opt/haxe/std/haxe/xml/Parser.hx"
							if (( c == 63 )) {
								#line 337 "/opt/haxe/std/haxe/xml/Parser.hx"
								int index5 = ( p1 + 1 );
								#line 337 "/opt/haxe/std/haxe/xml/Parser.hx"
								tmp3 = ( (( (( ((uint) (index5) ) < str.Length )) ? (((int) (str[index5]) )) : (-1) )) == 62 );
							}
							else {
								#line 337 "/opt/haxe/std/haxe/xml/Parser.hx"
								tmp3 = false;
							}
							
							#line 337 "/opt/haxe/std/haxe/xml/Parser.hx"
							if (tmp3) {
								#line 338 "/opt/haxe/std/haxe/xml/Parser.hx"
								 ++ p1;
								string str1 = global::haxe.lang.StringExt.substr(str, ( start + 1 ), new global::haxe.lang.Null<int>(( ( p1 - start ) - 2 ), true));
								#line 340 "/opt/haxe/std/haxe/xml/Parser.hx"
								{
									#line 340 "/opt/haxe/std/haxe/xml/Parser.hx"
									parent.addChild(global::Xml.createProcessingInstruction(str1));
									#line 340 "/opt/haxe/std/haxe/xml/Parser.hx"
									 ++ nsubs;
								}
								
								#line 341 "/opt/haxe/std/haxe/xml/Parser.hx"
								state = ((int) (1) );
							}
							
							#line 337 "/opt/haxe/std/haxe/xml/Parser.hx"
							break;
						}
						
						
						case 15:
						{
							#line 322 "/opt/haxe/std/haxe/xml/Parser.hx"
							bool tmp4 = default(bool);
							#line 322 "/opt/haxe/std/haxe/xml/Parser.hx"
							bool tmp5 = default(bool);
							#line 322 "/opt/haxe/std/haxe/xml/Parser.hx"
							if (( c == 45 )) {
								#line 322 "/opt/haxe/std/haxe/xml/Parser.hx"
								int index6 = ( p1 + 1 );
								#line 322 "/opt/haxe/std/haxe/xml/Parser.hx"
								tmp5 = ( (( (( ((uint) (index6) ) < str.Length )) ? (((int) (str[index6]) )) : (-1) )) == 45 );
							}
							else {
								#line 322 "/opt/haxe/std/haxe/xml/Parser.hx"
								tmp5 = false;
							}
							
							#line 322 "/opt/haxe/std/haxe/xml/Parser.hx"
							if (tmp5) {
								#line 322 "/opt/haxe/std/haxe/xml/Parser.hx"
								int index7 = ( p1 + 2 );
								#line 322 "/opt/haxe/std/haxe/xml/Parser.hx"
								tmp4 = ( (( (( ((uint) (index7) ) < str.Length )) ? (((int) (str[index7]) )) : (-1) )) == 62 );
							}
							else {
								#line 322 "/opt/haxe/std/haxe/xml/Parser.hx"
								tmp4 = false;
							}
							
							#line 322 "/opt/haxe/std/haxe/xml/Parser.hx"
							if (tmp4) {
								#line 323 "/opt/haxe/std/haxe/xml/Parser.hx"
								{
									#line 323 "/opt/haxe/std/haxe/xml/Parser.hx"
									parent.addChild(global::Xml.createComment(global::haxe.lang.StringExt.substr(str, start, new global::haxe.lang.Null<int>(( p1 - start ), true))));
									#line 323 "/opt/haxe/std/haxe/xml/Parser.hx"
									 ++ nsubs;
								}
								
								#line 324 "/opt/haxe/std/haxe/xml/Parser.hx"
								p1 += 2;
								state = ((int) (1) );
							}
							
							#line 322 "/opt/haxe/std/haxe/xml/Parser.hx"
							break;
						}
						
						
						case 16:
						{
							#line 328 "/opt/haxe/std/haxe/xml/Parser.hx"
							if (( c == 91 )) {
								#line 329 "/opt/haxe/std/haxe/xml/Parser.hx"
								 ++ nbrackets;
							}
							else if (( c == 93 )) {
								#line 331 "/opt/haxe/std/haxe/xml/Parser.hx"
								 -- nbrackets;
							}
							else if (( ( c == 62 ) && ( nbrackets == 0 ) )) {
								#line 333 "/opt/haxe/std/haxe/xml/Parser.hx"
								{
									#line 333 "/opt/haxe/std/haxe/xml/Parser.hx"
									parent.addChild(global::Xml.createDocType(global::haxe.lang.StringExt.substr(str, start, new global::haxe.lang.Null<int>(( p1 - start ), true))));
									#line 333 "/opt/haxe/std/haxe/xml/Parser.hx"
									 ++ nsubs;
								}
								
								#line 334 "/opt/haxe/std/haxe/xml/Parser.hx"
								state = ((int) (1) );
							}
							
							#line 328 "/opt/haxe/std/haxe/xml/Parser.hx"
							break;
						}
						
						
						case 17:
						{
							#line 172 "/opt/haxe/std/haxe/xml/Parser.hx"
							bool tmp6 = default(bool);
							#line 172 "/opt/haxe/std/haxe/xml/Parser.hx"
							bool tmp7 = default(bool);
							#line 172 "/opt/haxe/std/haxe/xml/Parser.hx"
							if (( c == 93 )) {
								#line 172 "/opt/haxe/std/haxe/xml/Parser.hx"
								int index8 = ( p1 + 1 );
								#line 172 "/opt/haxe/std/haxe/xml/Parser.hx"
								tmp7 = ( (( (( ((uint) (index8) ) < str.Length )) ? (((int) (str[index8]) )) : (-1) )) == 93 );
							}
							else {
								#line 172 "/opt/haxe/std/haxe/xml/Parser.hx"
								tmp7 = false;
							}
							
							#line 172 "/opt/haxe/std/haxe/xml/Parser.hx"
							if (tmp7) {
								#line 172 "/opt/haxe/std/haxe/xml/Parser.hx"
								int index9 = ( p1 + 2 );
								#line 172 "/opt/haxe/std/haxe/xml/Parser.hx"
								tmp6 = ( (( (( ((uint) (index9) ) < str.Length )) ? (((int) (str[index9]) )) : (-1) )) == 62 );
							}
							else {
								#line 172 "/opt/haxe/std/haxe/xml/Parser.hx"
								tmp6 = false;
							}
							
							#line 172 "/opt/haxe/std/haxe/xml/Parser.hx"
							if (tmp6) {
								#line 173 "/opt/haxe/std/haxe/xml/Parser.hx"
								global::Xml child1 = global::Xml.createCData(global::haxe.lang.StringExt.substr(str, start, new global::haxe.lang.Null<int>(( p1 - start ), true)));
								{
									#line 174 "/opt/haxe/std/haxe/xml/Parser.hx"
									parent.addChild(child1);
									#line 174 "/opt/haxe/std/haxe/xml/Parser.hx"
									 ++ nsubs;
								}
								
								#line 175 "/opt/haxe/std/haxe/xml/Parser.hx"
								p1 += 2;
								state = ((int) (1) );
							}
							
							#line 172 "/opt/haxe/std/haxe/xml/Parser.hx"
							break;
						}
						
						
						case 18:
						{
							#line 344 "/opt/haxe/std/haxe/xml/Parser.hx"
							if (( c == 59 )) {
								#line 345 "/opt/haxe/std/haxe/xml/Parser.hx"
								string s = global::haxe.lang.StringExt.substr(str, start, new global::haxe.lang.Null<int>(( p1 - start ), true));
								if (( (( (( ((uint) (0) ) < s.Length )) ? (((int) (s[0]) )) : (-1) )) == 35 )) {
									#line 347 "/opt/haxe/std/haxe/xml/Parser.hx"
									global::haxe.lang.Null<int> c1 = ( (( (( (( ((uint) (1) ) < s.Length )) ? (((int) (s[1]) )) : (-1) )) == 120 )) ? (global::Std.parseInt(global::haxe.lang.Runtime.concat("0", global::haxe.lang.StringExt.substr(s, 1, new global::haxe.lang.Null<int>(( s.Length - 1 ), true))))) : (global::Std.parseInt(global::haxe.lang.StringExt.substr(s, 1, new global::haxe.lang.Null<int>(( s.Length - 1 ), true)))) );
									#line 367 "/opt/haxe/std/haxe/xml/Parser.hx"
									buf.addChar((c1).@value);
								}
								else if ( ! (global::haxe.xml.Parser.escapes.exists(s)) ) {
									#line 369 "/opt/haxe/std/haxe/xml/Parser.hx"
									if (strict) {
										#line 370 "/opt/haxe/std/haxe/xml/Parser.hx"
										throw ((global::System.Exception) (global::haxe.Exception.thrown(new global::haxe.xml.XmlParserException(global::haxe.lang.Runtime.concat("Undefined entity: ", s), str, p1))) );
									}
									
									#line 371 "/opt/haxe/std/haxe/xml/Parser.hx"
									buf.b.Append(((string) (global::Std.@string(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("&", s), ";"))) ));
								}
								else {
									#line 373 "/opt/haxe/std/haxe/xml/Parser.hx"
									string x = global::haxe.lang.Runtime.toString((global::haxe.xml.Parser.escapes.@get(s)).toDynamic());
									#line 373 "/opt/haxe/std/haxe/xml/Parser.hx"
									buf.b.Append(((string) (global::Std.@string(x)) ));
								}
								
								#line 375 "/opt/haxe/std/haxe/xml/Parser.hx"
								start = ( p1 + 1 );
								state = escapeNext;
							}
							else if ((  ! ((( ( ( ( ( ( ( ( c >= 97 ) && ( c <= 122 ) ) || ( ( c >= 65 ) && ( c <= 90 ) ) ) || ( ( c >= 48 ) && ( c <= 57 ) ) ) || ( c == 58 ) ) || ( c == 46 ) ) || ( c == 95 ) ) || ( c == 45 ) )))  && ( c != 35 ) )) {
								#line 378 "/opt/haxe/std/haxe/xml/Parser.hx"
								if (strict) {
									#line 379 "/opt/haxe/std/haxe/xml/Parser.hx"
									throw ((global::System.Exception) (global::haxe.Exception.thrown(new global::haxe.xml.XmlParserException(global::haxe.lang.Runtime.concat("Invalid character in entity: ", global::haxe.lang.StringExt.fromCharCode(c)), str, p1))) );
								}
								
								#line 380 "/opt/haxe/std/haxe/xml/Parser.hx"
								buf.addChar(38);
								{
									#line 381 "/opt/haxe/std/haxe/xml/Parser.hx"
									global::haxe.lang.Null<int> len5 = new global::haxe.lang.Null<int>(( p1 - start ), true);
									#line 381 "/opt/haxe/std/haxe/xml/Parser.hx"
									buf.b.Append(((string) (str) ), ((int) (start) ), ((int) (( ( ! (len5.hasValue) ) ? (( str.Length - start )) : ((len5).@value) )) ));
								}
								
								#line 382 "/opt/haxe/std/haxe/xml/Parser.hx"
								 -- p1;
								start = ( p1 + 1 );
								#line 384 "/opt/haxe/std/haxe/xml/Parser.hx"
								state = escapeNext;
							}
							
							#line 344 "/opt/haxe/std/haxe/xml/Parser.hx"
							break;
						}
						
						
					}
					
					#line 387 "/opt/haxe/std/haxe/xml/Parser.hx"
					int index10 =  ++ p1;
					#line 387 "/opt/haxe/std/haxe/xml/Parser.hx"
					c = ( (( ((uint) (index10) ) < str.Length )) ? (((int) (str[index10]) )) : (-1) );
				}
				
				#line 390 "/opt/haxe/std/haxe/xml/Parser.hx"
				if (( state == ((int) (1) ) )) {
					#line 391 "/opt/haxe/std/haxe/xml/Parser.hx"
					start = p1;
					state = ((int) (13) );
				}
				
				#line 395 "/opt/haxe/std/haxe/xml/Parser.hx"
				if (( state == ((int) (13) ) )) {
					#line 396 "/opt/haxe/std/haxe/xml/Parser.hx"
					if (( parent.nodeType == ((int) (0) ) )) {
						#line 397 "/opt/haxe/std/haxe/xml/Parser.hx"
						if (( parent.nodeType != global::Xml.Element )) {
							#line 397 "/opt/haxe/std/haxe/xml/Parser.hx"
							throw ((global::System.Exception) (global::haxe.Exception.thrown(global::haxe.lang.Runtime.concat("Bad node type, expected Element but found ", global::_Xml.XmlType_Impl_.toString(parent.nodeType)))) );
						}
						
						#line 397 "/opt/haxe/std/haxe/xml/Parser.hx"
						throw ((global::System.Exception) (global::haxe.Exception.thrown(new global::haxe.xml.XmlParserException(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("Unclosed node <", parent.nodeName), ">"), str, p1))) );
					}
					
					#line 399 "/opt/haxe/std/haxe/xml/Parser.hx"
					if (( ( p1 != start ) || ( nsubs == 0 ) )) {
						#line 400 "/opt/haxe/std/haxe/xml/Parser.hx"
						{
							#line 400 "/opt/haxe/std/haxe/xml/Parser.hx"
							global::haxe.lang.Null<int> len6 = new global::haxe.lang.Null<int>(( p1 - start ), true);
							#line 400 "/opt/haxe/std/haxe/xml/Parser.hx"
							buf.b.Append(((string) (str) ), ((int) (start) ), ((int) (( ( ! (len6.hasValue) ) ? (( str.Length - start )) : ((len6).@value) )) ));
						}
						
						#line 401 "/opt/haxe/std/haxe/xml/Parser.hx"
						{
							#line 401 "/opt/haxe/std/haxe/xml/Parser.hx"
							parent.addChild(global::Xml.createPCData(buf.b.ToString()));
							#line 401 "/opt/haxe/std/haxe/xml/Parser.hx"
							 ++ nsubs;
						}
						
					}
					
					#line 403 "/opt/haxe/std/haxe/xml/Parser.hx"
					return p1;
				}
				
				#line 406 "/opt/haxe/std/haxe/xml/Parser.hx"
				if (( (  ! (strict)  && ( state == ((int) (18) ) ) ) && ( escapeNext == ((int) (13) ) ) )) {
					#line 407 "/opt/haxe/std/haxe/xml/Parser.hx"
					buf.addChar(38);
					{
						#line 408 "/opt/haxe/std/haxe/xml/Parser.hx"
						global::haxe.lang.Null<int> len7 = new global::haxe.lang.Null<int>(( p1 - start ), true);
						#line 408 "/opt/haxe/std/haxe/xml/Parser.hx"
						buf.b.Append(((string) (str) ), ((int) (start) ), ((int) (( ( ! (len7.hasValue) ) ? (( str.Length - start )) : ((len7).@value) )) ));
					}
					
					#line 409 "/opt/haxe/std/haxe/xml/Parser.hx"
					{
						#line 409 "/opt/haxe/std/haxe/xml/Parser.hx"
						parent.addChild(global::Xml.createPCData(buf.b.ToString()));
						#line 409 "/opt/haxe/std/haxe/xml/Parser.hx"
						 ++ nsubs;
					}
					
					#line 410 "/opt/haxe/std/haxe/xml/Parser.hx"
					return p1;
				}
				
				#line 413 "/opt/haxe/std/haxe/xml/Parser.hx"
				throw ((global::System.Exception) (global::haxe.Exception.thrown(new global::haxe.xml.XmlParserException("Unexpected end", str, p1))) );
			}
			#line default
		}
		
		
		public static bool isValidChar(int c) {
			unchecked {
				#line 417 "/opt/haxe/std/haxe/xml/Parser.hx"
				if ( ! ((( ( ( ( ( ( ( c >= 97 ) && ( c <= 122 ) ) || ( ( c >= 65 ) && ( c <= 90 ) ) ) || ( ( c >= 48 ) && ( c <= 57 ) ) ) || ( c == 58 ) ) || ( c == 46 ) ) || ( c == 95 ) ))) ) {
					#line 418 "/opt/haxe/std/haxe/xml/Parser.hx"
					return ( c == 45 );
				}
				else {
					#line 417 "/opt/haxe/std/haxe/xml/Parser.hx"
					return true;
				}
				
			}
			#line default
		}
		
		
	}
}


