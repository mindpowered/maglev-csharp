// Generated by Haxe 4.1.1

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace haxe.ds {
	public class ListSort : global::haxe.lang.HxObject {
		
		public ListSort(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public ListSort() {
			#line 29 "/opt/haxe/std/haxe/ds/ListSort.hx"
			global::haxe.ds.ListSort.__hx_ctor_haxe_ds_ListSort(this);
		}
		#line default
		
		protected static void __hx_ctor_haxe_ds_ListSort(global::haxe.ds.ListSort __hx_this) {
		}
		
		
		public static T sort<T>(T list, global::haxe.lang.Function cmp) {
			unchecked {
				#line 44 "/opt/haxe/std/haxe/ds/ListSort.hx"
				if (global::haxe.lang.Runtime.eq(list, default(T))) {
					#line 45 "/opt/haxe/std/haxe/ds/ListSort.hx"
					return default(T);
				}
				
				#line 46 "/opt/haxe/std/haxe/ds/ListSort.hx"
				int insize = 1;
				#line 46 "/opt/haxe/std/haxe/ds/ListSort.hx"
				int nmerges = default(int);
				#line 46 "/opt/haxe/std/haxe/ds/ListSort.hx"
				int psize = 0;
				#line 46 "/opt/haxe/std/haxe/ds/ListSort.hx"
				int qsize = 0;
				T p = default(T);
				T q = default(T);
				T e = default(T);
				T tail = default(T);
				#line 48 "/opt/haxe/std/haxe/ds/ListSort.hx"
				while (true) {
					#line 49 "/opt/haxe/std/haxe/ds/ListSort.hx"
					p = list;
					list = default(T);
					#line 51 "/opt/haxe/std/haxe/ds/ListSort.hx"
					tail = default(T);
					nmerges = 0;
					#line 53 "/opt/haxe/std/haxe/ds/ListSort.hx"
					while (( ! (global::haxe.lang.Runtime.eq(p, default(T))) )) {
						#line 54 "/opt/haxe/std/haxe/ds/ListSort.hx"
						 ++ nmerges;
						q = p;
						#line 56 "/opt/haxe/std/haxe/ds/ListSort.hx"
						psize = 0;
						{
							#line 57 "/opt/haxe/std/haxe/ds/ListSort.hx"
							int _g = 0;
							#line 57 "/opt/haxe/std/haxe/ds/ListSort.hx"
							int _g1 = insize;
							#line 57 "/opt/haxe/std/haxe/ds/ListSort.hx"
							while (( _g < _g1 )) {
								#line 57 "/opt/haxe/std/haxe/ds/ListSort.hx"
								int i = _g++;
								 ++ psize;
								#line 59 "/opt/haxe/std/haxe/ds/ListSort.hx"
								q = global::haxe.lang.Runtime.genericCast<T>(global::haxe.lang.Runtime.getField(q, "next", 1224901875, true));
								if (global::haxe.lang.Runtime.eq(q, default(T))) {
									#line 61 "/opt/haxe/std/haxe/ds/ListSort.hx"
									break;
								}
								
							}
							
						}
						
						#line 63 "/opt/haxe/std/haxe/ds/ListSort.hx"
						qsize = insize;
						while (( ( psize > 0 ) || ( ( qsize > 0 ) && ( ! (global::haxe.lang.Runtime.eq(q, default(T))) ) ) )) {
							#line 65 "/opt/haxe/std/haxe/ds/ListSort.hx"
							if (( psize == 0 )) {
								#line 66 "/opt/haxe/std/haxe/ds/ListSort.hx"
								e = q;
								q = global::haxe.lang.Runtime.genericCast<T>(global::haxe.lang.Runtime.getField(q, "next", 1224901875, true));
								#line 68 "/opt/haxe/std/haxe/ds/ListSort.hx"
								 -- qsize;
							}
							else if (( ( ( qsize == 0 ) || global::haxe.lang.Runtime.eq(q, default(T)) ) || ( ((int) (cmp.__hx_invoke2_f(default(double), p, default(double), q)) ) <= 0 ) )) {
								#line 70 "/opt/haxe/std/haxe/ds/ListSort.hx"
								e = p;
								p = global::haxe.lang.Runtime.genericCast<T>(global::haxe.lang.Runtime.getField(p, "next", 1224901875, true));
								#line 72 "/opt/haxe/std/haxe/ds/ListSort.hx"
								 -- psize;
							}
							else {
								#line 74 "/opt/haxe/std/haxe/ds/ListSort.hx"
								e = q;
								q = global::haxe.lang.Runtime.genericCast<T>(global::haxe.lang.Runtime.getField(q, "next", 1224901875, true));
								#line 76 "/opt/haxe/std/haxe/ds/ListSort.hx"
								 -- qsize;
							}
							
							#line 78 "/opt/haxe/std/haxe/ds/ListSort.hx"
							if (( ! (global::haxe.lang.Runtime.eq(tail, default(T))) )) {
								#line 79 "/opt/haxe/std/haxe/ds/ListSort.hx"
								T __temp_expr1 = global::haxe.lang.Runtime.genericCast<T>(global::haxe.lang.Runtime.setField(tail, "next", 1224901875, e));
							}
							else {
								#line 81 "/opt/haxe/std/haxe/ds/ListSort.hx"
								list = e;
							}
							
							#line 82 "/opt/haxe/std/haxe/ds/ListSort.hx"
							T __temp_expr2 = global::haxe.lang.Runtime.genericCast<T>(global::haxe.lang.Runtime.setField(e, "prev", 1247723251, tail));
							tail = e;
						}
						
						#line 85 "/opt/haxe/std/haxe/ds/ListSort.hx"
						p = q;
					}
					
					#line 87 "/opt/haxe/std/haxe/ds/ListSort.hx"
					T __temp_expr3 = global::haxe.lang.Runtime.genericCast<T>(global::haxe.lang.Runtime.setField(tail, "next", 1224901875, default(T)));
					if (( nmerges <= 1 )) {
						#line 89 "/opt/haxe/std/haxe/ds/ListSort.hx"
						break;
					}
					
					#line 90 "/opt/haxe/std/haxe/ds/ListSort.hx"
					insize *= 2;
				}
				
				#line 92 "/opt/haxe/std/haxe/ds/ListSort.hx"
				T __temp_expr4 = global::haxe.lang.Runtime.genericCast<T>(global::haxe.lang.Runtime.setField(list, "prev", 1247723251, tail));
				return list;
			}
			#line default
		}
		
		
		public static T sortSingleLinked<T>(T list, global::haxe.lang.Function cmp) {
			unchecked {
				#line 100 "/opt/haxe/std/haxe/ds/ListSort.hx"
				if (global::haxe.lang.Runtime.eq(list, default(T))) {
					#line 101 "/opt/haxe/std/haxe/ds/ListSort.hx"
					return default(T);
				}
				
				#line 102 "/opt/haxe/std/haxe/ds/ListSort.hx"
				int insize = 1;
				#line 102 "/opt/haxe/std/haxe/ds/ListSort.hx"
				int nmerges = default(int);
				#line 102 "/opt/haxe/std/haxe/ds/ListSort.hx"
				int psize = 0;
				#line 102 "/opt/haxe/std/haxe/ds/ListSort.hx"
				int qsize = 0;
				T p = default(T);
				T q = default(T);
				T e = default(T);
				T tail = default(T);
				#line 104 "/opt/haxe/std/haxe/ds/ListSort.hx"
				while (true) {
					#line 105 "/opt/haxe/std/haxe/ds/ListSort.hx"
					p = list;
					list = default(T);
					#line 107 "/opt/haxe/std/haxe/ds/ListSort.hx"
					tail = default(T);
					nmerges = 0;
					#line 109 "/opt/haxe/std/haxe/ds/ListSort.hx"
					while (( ! (global::haxe.lang.Runtime.eq(p, default(T))) )) {
						#line 110 "/opt/haxe/std/haxe/ds/ListSort.hx"
						 ++ nmerges;
						q = p;
						#line 112 "/opt/haxe/std/haxe/ds/ListSort.hx"
						psize = 0;
						{
							#line 113 "/opt/haxe/std/haxe/ds/ListSort.hx"
							int _g = 0;
							#line 113 "/opt/haxe/std/haxe/ds/ListSort.hx"
							int _g1 = insize;
							#line 113 "/opt/haxe/std/haxe/ds/ListSort.hx"
							while (( _g < _g1 )) {
								#line 113 "/opt/haxe/std/haxe/ds/ListSort.hx"
								int i = _g++;
								 ++ psize;
								#line 115 "/opt/haxe/std/haxe/ds/ListSort.hx"
								q = global::haxe.lang.Runtime.genericCast<T>(global::haxe.lang.Runtime.getField(q, "next", 1224901875, true));
								if (global::haxe.lang.Runtime.eq(q, default(T))) {
									#line 117 "/opt/haxe/std/haxe/ds/ListSort.hx"
									break;
								}
								
							}
							
						}
						
						#line 119 "/opt/haxe/std/haxe/ds/ListSort.hx"
						qsize = insize;
						while (( ( psize > 0 ) || ( ( qsize > 0 ) && ( ! (global::haxe.lang.Runtime.eq(q, default(T))) ) ) )) {
							#line 121 "/opt/haxe/std/haxe/ds/ListSort.hx"
							if (( psize == 0 )) {
								#line 122 "/opt/haxe/std/haxe/ds/ListSort.hx"
								e = q;
								q = global::haxe.lang.Runtime.genericCast<T>(global::haxe.lang.Runtime.getField(q, "next", 1224901875, true));
								#line 124 "/opt/haxe/std/haxe/ds/ListSort.hx"
								 -- qsize;
							}
							else if (( ( ( qsize == 0 ) || global::haxe.lang.Runtime.eq(q, default(T)) ) || ( ((int) (cmp.__hx_invoke2_f(default(double), p, default(double), q)) ) <= 0 ) )) {
								#line 126 "/opt/haxe/std/haxe/ds/ListSort.hx"
								e = p;
								p = global::haxe.lang.Runtime.genericCast<T>(global::haxe.lang.Runtime.getField(p, "next", 1224901875, true));
								#line 128 "/opt/haxe/std/haxe/ds/ListSort.hx"
								 -- psize;
							}
							else {
								#line 130 "/opt/haxe/std/haxe/ds/ListSort.hx"
								e = q;
								q = global::haxe.lang.Runtime.genericCast<T>(global::haxe.lang.Runtime.getField(q, "next", 1224901875, true));
								#line 132 "/opt/haxe/std/haxe/ds/ListSort.hx"
								 -- qsize;
							}
							
							#line 134 "/opt/haxe/std/haxe/ds/ListSort.hx"
							if (( ! (global::haxe.lang.Runtime.eq(tail, default(T))) )) {
								#line 135 "/opt/haxe/std/haxe/ds/ListSort.hx"
								T __temp_expr1 = global::haxe.lang.Runtime.genericCast<T>(global::haxe.lang.Runtime.setField(tail, "next", 1224901875, e));
							}
							else {
								#line 137 "/opt/haxe/std/haxe/ds/ListSort.hx"
								list = e;
							}
							
							#line 138 "/opt/haxe/std/haxe/ds/ListSort.hx"
							tail = e;
						}
						
						#line 140 "/opt/haxe/std/haxe/ds/ListSort.hx"
						p = q;
					}
					
					#line 142 "/opt/haxe/std/haxe/ds/ListSort.hx"
					T __temp_expr2 = global::haxe.lang.Runtime.genericCast<T>(global::haxe.lang.Runtime.setField(tail, "next", 1224901875, default(T)));
					if (( nmerges <= 1 )) {
						#line 144 "/opt/haxe/std/haxe/ds/ListSort.hx"
						break;
					}
					
					#line 145 "/opt/haxe/std/haxe/ds/ListSort.hx"
					insize *= 2;
				}
				
				#line 147 "/opt/haxe/std/haxe/ds/ListSort.hx"
				return list;
			}
			#line default
		}
		
		
	}
}


